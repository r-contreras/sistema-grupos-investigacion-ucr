@using ResearchRepository.Domain.PublicationContext;


@if (_isLoading == false)
{


    <MudItem xs="12">

        <MudText Typo="Typo.h6" Class="ml-6"> Publicaciones asociadas: </MudText>
        <br>

    </MudItem>

    @if (_publications.Count() > 0)
    {
        <MudGrid Justify="Justify.Center">
            @foreach (var p in _publications)
            {
            <MudItem xs="4">
                <GenericCard isThesisOrProject="true" title="@p.Name.ToString()" description="@p.Summary.ToString()" link="@("/PublicationDetailed/" + @p.Id)" msgButton="Ver más"></GenericCard>

            </MudItem>
            }
    
            <MudItem xs="12" Class="text-centered">
                <Pagination totalPagesQuantity="totalpublicationsPages" currentPage="publicationPageIndex" radius="2" selectedPage="SelectedPublications" />
            </MudItem>
        </MudGrid>
    }
    else
    {
        <MudItem xs="12">
            <MudAlert Severity="Severity.Info">No hay resultados para: <strong>Publicaciones</strong></MudAlert>
        </MudItem>
    }

}
@code {
    [Parameter] public string Email { get; set; }
    [Parameter] public IList<Publication> _allpublications { get; set; }
    [Parameter] public Dictionary<string, IList<Tuple<string, string>>> _mainAuthorList { get; set; }
    private IList<Publication> _publications { get; set; }

    private int itemsPerPage = 3;

    private int publicationPageIndex = 1;
    private int totalpublicationsPages = 1;

    private bool _isLoading = true;


    protected override async Task OnInitializedAsync()
    {

        if (_allpublications != null)
        {
            totalpublicationsPages = setPagination(_allpublications, itemsPerPage);
            _publications = _allpublications.Skip(0).Take(itemsPerPage).ToList();
        }
        _isLoading = false;
    }

    /// <summary>
    /// Calculates the amount of pages depending on the available elements to display and desired items per page.
    /// </summary>
    /// Author: Carlos Mora
    /// User Story ID: ST-PA-3.8
    /// <param name="peopleList">The list of people to be divided into pages</param>
    /// <param name="itemsPerPage">The desired amount of items to be shown in each page</param>
    /// <returns>
    /// The total pages with elements loaded into them.
    /// </returns>
    private int setPagination<T>(IList<T> list, int itemsPerPage)
    {
        int totalPages = 1;
        if (list != null)
        {
            totalPages = (int)(list.Count() / itemsPerPage);

            if (!(list.Count() % itemsPerPage == 0))
            {
                totalPages += 1;
            }
        }
        return totalPages;
    }


    /// <summary>
    /// Loads the obtained database information about projects into pages.
    /// </summary>
    /// Author: Carlos Mora
    /// User Story ID: ST-PA-3.8
    /// <param name="selectedPageIndex">The current page that was selected</param>
    /// <returns></returns>
    private void SelectedPublications(int selectedPageIndex)
    {
        if (_allpublications != null)
        {
            publicationPageIndex = selectedPageIndex;
            var skipCount = itemsPerPage * (publicationPageIndex - 1);
            _publications = _allpublications.Skip(skipCount).Take(itemsPerPage).ToList();
        }
    }


}


@using ResearchRepository.Domain.Theses.Entities;

@if (_isLoading == false)
{


    <MudItem xs="12">

        <MudText Typo="Typo.h6" Class="ml-6"> Trabajos finales de graduación asociados: </MudText>
        <br>

    </MudItem>

    @if (_thesis.Count() > 0)
    {
    <MudGrid Justify="Justify.Center">
        @foreach (var t in _thesis)
        {
        <MudItem xs="4">
            <GenericCard isThesisOrProject="true" title="@t.Name.ToString()" description="@t.Summary.ToString()" link="@("/tesisInfo/" + @t.Id)" msgButton="Ver más" image="@(t.Image)"></GenericCard>
        </MudItem>
        }

        <MudItem xs="12" Class="text-centered">
            <Pagination totalPagesQuantity="totalthesisPages" currentPage="thesisPageIndex" radius="2" selectedPage="SelectedThesis" />
        </MudItem>
    </MudGrid>
    }
    else
    {
        <MudItem xs="12">
            <MudAlert Severity="Severity.Info">No hay resultados para: <strong>Trabajos de graduación</strong></MudAlert>
        </MudItem>
    }
    <MudItem xs="12">
        <br>
    </MudItem>
}

    @code {
        [Parameter] public string Email { get; set; }
        [Parameter] public IList<Thesis> _allthesis { get; set; }
        private IList<Thesis> _thesis;


        private int itemsPerPage = 3;

        private int thesisPageIndex = 1;
        private int totalthesisPages = 1;

        private bool _isLoading = true;

        protected override async Task OnInitializedAsync()
        {

            if (_allthesis != null)
            {
                totalthesisPages = setPagination(_allthesis, itemsPerPage);
                _thesis = _allthesis.Skip(0).Take(itemsPerPage).ToList();
            }
            _isLoading = false;
        }
        /// <summary>
        /// Calculates the amount of pages depending on the available elements to display and desired items per page.
        /// </summary>
        /// Author: Carlos Mora and Andrea Alvarado
        /// User Story ID: ST-PA-3.11-Thesis
        /// <param name="peopleList">The list of people to be divided into pages</param>
        /// <param name="itemsPerPage">The desired amount of items to be shown in each page</param>
        /// <returns>
        /// The total pages with elements loaded into them.
        /// </returns>
        private int setPagination<T>(IList<T> list, int itemsPerPage)
        {
            int totalPages = 1;
            if (list != null)
            {
                totalPages = (int)(list.Count() / itemsPerPage);

                if (!(list.Count() % itemsPerPage == 0))
                {
                    totalPages += 1;
                }
            }
            return totalPages;
        }


        /// <summary>
        /// Loads the obtained database information about thesis into pages.
        /// </summary>
        /// Author: Carlos Mora and Andrea Alvarado
        /// User Story ID: ST-PA-3.11-Thesis
        /// <param name="selectedPageIndex">The current page that was selected</param>
        /// <returns></returns>
        private void SelectedThesis(int selectedPageIndex)
        {
            if (_allthesis != null)
            {
                thesisPageIndex = selectedPageIndex;
                var skipCount = itemsPerPage * (thesisPageIndex - 1);
                _thesis = _allthesis.Skip(skipCount).Take(itemsPerPage).ToList();
            }
        }



}
